openapi: 3.0.1
info:
  title: SchemaFlex API
  description: Dynamic saving and validation of forms based on Json Schemas
  version: "0.0.1"
servers:
  - url: "/"
    description: Relative URL (uses application context root)
paths:
  /schemas/all-schemas:
    get:
      tags:
        - Schemas
      summary: Get all schemas
      operationId: getAllSchemas
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomSchema'
  /schemas/schema/{schemaId}:
    get:
      tags:
        - Schemas
      summary: Get schema by ID
      operationId: getSchemaById
      parameters:
        - in: path
          name: schemaId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSchema'
  /schemas/create-schema:
    post:
      tags:
        - Schemas
      summary: Create a new schema
      operationId: createSchema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaRequest'
      responses:
        '201':
          description: schema created

  /documents/all-documents:
    get:
      tags:
        - Documents
      summary: Get all documents
      operationId: getAllDocuments
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
  /documents/{documentId}:
    get:
      tags:
        - Documents
      summary: Get document by ID
      operationId: getDocumentById
      parameters:
        - in: path
          name: documentId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /documents/create-document:
    post:
      tags:
        - Documents
      summary: Create a new document
      operationId: createDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
      responses:
        '201':
          description: document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /documents/update-document:
    put:
      tags:
        - Documents
      summary: Update an existing document
      operationId: updateDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
      responses:
        '200':
          description: document updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

components:
  schemas:
    CustomSchema:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        uiSchema:
          type: object
          additionalProperties: true
        dataSchema:
          type: object
          additionalProperties: true
      required:
        - name
        - dataSchema

    Document:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        schemaId:
          type: integer
        data:
          type: object
          additionalProperties: true
      required:
        - schemaId
        - data

    CreateSchemaRequest:
      type: object
      properties:
        schemaName:
          type: string
        dataSchema:
          type: object
          additionalProperties: true
        uiSchema:
          type: object
          additionalProperties: true
        saveAsFile:
          type: boolean
      required:
        - schemaName
        - dataSchema

    CreateDocumentRequest:
      type: object
      properties:
        name:
          type: string
        schemaId:
          type: integer
        data:
          type: object
          additionalProperties: true
      required:
        - schemaId
        - data

    UpdateDocumentRequest:
      type: object
      properties:
        id:
          type: integer
        data:
          type: object
          additionalProperties: true
      required:
        - id
        - data
